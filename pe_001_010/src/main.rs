fn main() {
    // Multiples of 3 and 5
    // If we list all the natural numbers below 10 that are multiples of 3 or 5, 
    // we get 3, 5, 6 and 9. The sum of these multiples is 23.
    // Find the sum of all the multiples of 3 or 5 below 1000.
    println!("pe_001 ans: {}", pe_001(1_000));

    // Even Fibonacci numbers
    // Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    // By starting with 1 and 2, the first 10 terms will be:
    // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    // By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
    // find the sum of the even-valued terms.
    println!("pe_002 ans: {}", pe_002(4_000_000));    
}


fn pe_001(num: u32) -> u32 {  
    let mut sum = 0;
    for n in 0..num {
        if n % 3 == 0 || n % 5 == 0 {
            sum += n
        }
    };
    sum
}

fn pe_002(num: u32) -> u32 {

    fn fibonacci(num: u32) -> u32 {
        if num == 0 {
            0
        } else if num == 1 {
            1
        } else {
            fibonacci(num-2) + fibonacci(num-1)
        }
    }

    let mut sum = 0;
    let mut i = 1;
    let mut tmp;
    loop {
        tmp = fibonacci(i);
        if tmp >= num { break };

        if tmp % 2 == 0 { sum += tmp };
        i += 1;
    };
    sum
}